name: build

on:
  workflow_call:
    inputs:
      docker:
        description: Whether Docker image build is used
        type: boolean
        default: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Configure git user
        run: |
          git config --global user.email "mih-kopylov@users.noreply.github.com"
          git config --global user.name "Mikhail Kopylov"
      - name: Configure golang
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          check-latest: true
      - name: Verify dependencies
        run: go mod verify
      - name: Analyze with go vet
        run: go vet ./...
      - name: Analyze with gocyclo
        run: |
          go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
          gocyclo -over 15 .
          gocyclo -top 15 .
      - name: Analyze for vulnerabilities
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...
      - name: Run static analysis
        uses: dominikh/staticcheck-action@v1
        with:
          install-go: false
      - name: Run tests
        run: go test ./...
      - name: Build
        uses: goreleaser/goreleaser-action@v6
        with:
          args: build --snapshot --single-target
      - name: Log in to the Container registry
        if: inputs.docker
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        if: inputs.docker
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
      - name: Build and push Docker image
        if: inputs.docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
